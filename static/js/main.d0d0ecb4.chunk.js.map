{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","resetState","setState","id","name","status","onCloseForm","onChange","event","target","value","onSubmit","preventDefault","state","onClear","this","task","nextProps","className","onClick","type","Component","Sreach","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","role","Control","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","onToggleForm","isDisplayForm","taskEditing","onShowForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0d0ecb4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      name: '',\r\n      status: false,\r\n    };\r\n  }\r\n\r\n  /*componentWillMount(){\r\n    if(this.props.task.id!==null){\r\n      this.setState({\r\n        id: this.props.task.id ,\r\n        name: this.props.task.name,\r\n        status: this.props.task.status,\r\n      }, () => {\r\n        console.log(this.state);\r\n      })\r\n    }\r\n  }*/\r\n\r\n  /*componentDidMount(){\r\n    setInterval(() => {\r\n      this.setState({\r\n        // update state\r\n        id: this.props.task.id,\r\n          name: this.props.task.name,\r\n          status: this.props.task.status,\r\n      });\r\n    }, 5000);\r\n    console.log(this.state);\r\n  }*/\r\n\r\n  componentWillMount() {\r\n    if (this.props.task && this.props.task.id !== null) {\r\n      this.setState({\r\n        id: this.props.task.id,\r\n        name: this.props.task.name,\r\n        status: this.props.task.status,\r\n      });\r\n    } else {\r\n      this.resetState();\r\n    }\r\n  }\r\n  //Đúng\r\n  /*\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps && nextProps.task && nextProps.task.id !== null) {\r\n      this.setState({\r\n        id: nextProps.task.id,\r\n        name: nextProps.task.name,\r\n        status: nextProps.task.status,\r\n      });\r\n    } else {\r\n      this.resetState();\r\n    }\r\n  }*/\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps && nextProps.task) {\r\n      this.setState({\r\n        id: nextProps.task.id,\r\n        name: nextProps.task.name,\r\n        status: nextProps.task.status,\r\n      });\r\n    } else {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      id: '',\r\n      name: '',\r\n      status: false,\r\n    });\r\n  };\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n  render() {\r\n    var {id} = this.state;\r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">\r\n            { id !== '' ? 'Cập nhật công việc' : 'Thêm cộng việc' }\r\n            <span\r\n              className=\"fa fa-times-circle text-right\"\r\n              onClick={this.onCloseForm}\r\n            ></span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên :</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <label>Trạng Thái :</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"status\"\r\n              value={this.state.status}\r\n              onChange={this.onChange}\r\n            >\r\n              <option value={true}>Kích Hoạt</option>\r\n              <option value={false}>Ẩn</option>\r\n            </select>\r\n            <br />\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning\">\r\n                <span className=\"fa fa-plus mr-5\"></span> Lưu lại\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.onClear}\r\n              >\r\n                <span className=\"fa fa-close mr-5\"></span>Hủy Bỏ\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sreach extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keyword :'',\r\n        };\r\n    }\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value,\r\n        });\r\n    }\r\n\r\n    onSearch = () =>{\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    render() {\r\n        var {keyword} = this.state;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input \r\n                        name=\"keyword\"\r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Nhập từ khóa...\" \r\n                        value={keyword}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button \r\n                            className=\"btn btn-primary\" \r\n                            type=\"button\"\r\n                            onClick={this.onSearch}\r\n                        >\r\n                            <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sreach;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    onClick = (sortBy, sortValue) => {\r\n        this.props.onSort(sortBy, sortValue);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={() => this.onClick('name', 1)}>\r\n                            <a role=\"button\"\r\n                                className={\r\n                                    (this.props.sortBy === 'name' && this.props.sortValue === 1)\r\n                                        ? 'sort-selected' : ''\r\n                                }\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên A-Z\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={() => this.onClick('name', -1)}>\r\n                            <a role=\"button\"\r\n                                className={\r\n                                    (this.props.sortBy === 'name' && this.props.sortValue === -1)\r\n                                        ? 'sort-selected' : ''\r\n                                }\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li\r\n                            onClick={() => this.onClick('status', 1)}\r\n                        >\r\n                            <a role=\"button\"\r\n                                className={\r\n                                    (this.props.sortBy === 'status' && this.props.sortValue === 1)\r\n                                        ? 'sort-selected' : ''\r\n                                }\r\n                            >\r\n                                Trạng Thái Kích Hoạt\r\n                            </a>\r\n                        </li>\r\n                        <li\r\n                            onClick={() => this.onClick('status', -1)}\r\n                        >\r\n                            <a role=\"button\"\r\n                                className={\r\n                                    (this.props.sortBy === 'status' && this.props.sortValue === -1)\r\n                                        ? 'sort-selected' : ''\r\n                                }\r\n                            >\r\n                                Trạng Thái Ẩn\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Sreach from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <Sreach onSearch={this.props.onSearch}></Sreach>\r\n        <Sort \r\n            onSort={this.props.onSort}\r\n            sortBy={this.props.sortBy}\r\n            sortValue={this.props.sortValue}\r\n          ></Sort>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\nclass TaskItem extends Component {\r\n    onUpdateStatus = () =>{\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n    onDelete = () =>{\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n\r\n    onUpdate = () =>{\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n    render() {\r\n        var { task, index } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{task.name} </td>\r\n                <td className=\"text-center\">\r\n                    <span \r\n                        className={task.status === true ? \"label label-success\" : \"label label-info\"}\r\n                        onClick={this.onUpdateStatus}\r\n                    >\r\n                        {task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-warning\"\r\n                        onClick={this.onUpdate}\r\n                    >\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.onDelete}\r\n                    >\r\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nclass TaskList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            filterName: '',\r\n            filterStatus: -1, //Tất cả: -1, kích hoạt: 1, ẩn: 0\r\n        }\r\n    }\r\n\r\n    onChange = (event) =>{\r\n        var target=event.target;\r\n        var name=target.name;\r\n        var value=target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        );\r\n        this.setState({\r\n            [name]:value,\r\n        });\r\n    }\r\n    render() {\r\n        var { tasks } = this.props;\r\n        var { filterName, filterStatus} = this.state;\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return <TaskItem\r\n                key={task.id}\r\n                index={index}\r\n                task={task}\r\n                onUpdateStatus={this.props.onUpdateStatus}\r\n                onDelete={this.props.onDelete}\r\n                onUpdate={this.props.onUpdate}\r\n            ></TaskItem>\r\n        });\r\n        return (\r\n            <table className=\"table table-bordered table-hover mt-15\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name=\"filterName\"\r\n                                value ={filterName}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <select \r\n                                className=\"form-control\"\r\n                                name=\"filterStatus\"\r\n                                value={filterStatus}\r\n                                onChange={this.onChange}\r\n                            >\r\n                                <option value=\"-1\">Tất Cả</option>\r\n                                <option value=\"0\">Ẩn</option>\r\n                                <option value=\"1\">Kích Hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {elmTasks}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport Control from \"./components/Control\";\r\nimport TaskList from \"./components/TaskList\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      isDisplayForm: false,\r\n      taskEditing: null,\r\n      filter:{\r\n        name: '',\r\n        status: -1,\r\n      },\r\n      keyword: '',\r\n      sortBy: 'name',\r\n      sortValue: 1,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (localStorage && localStorage.getItem('tasks')) {\r\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n      this.setState({\r\n        tasks: tasks,\r\n      });\r\n    }\r\n  }\r\n\r\n  s4() {\r\n    return Math.floor((1 + Math.random()) * 0x1000000).toString(16).substring(1);\r\n  }\r\n\r\n  generateID() {\r\n    return this.s4() + this.s4() + '-' + this.s4() + this.s4() + '-' +\r\n      this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4();\r\n  }\r\n\r\n  onToggleForm = () => {\r\n    if(this.state.isDisplayForm && this.state.taskEditing!==null){\r\n      this.setState({\r\n        isDisplayForm: true,\r\n        taskEditing: null\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isDisplayForm: !this.state.isDisplayForm,\r\n        taskEditing: null\r\n      });\r\n    }\r\n  }\r\n\r\n  onCloseForm = () => {\r\n    this.setState({\r\n      isDisplayForm: false,\r\n    });\r\n  }\r\n\r\n  onShowForm = () => {\r\n    this.setState({\r\n      isDisplayForm: true,\r\n    });\r\n  }\r\n  onSubmit = (data) => {\r\n    var { tasks } = this.state;\r\n    if (data.id === '') {\r\n      data.id = this.generateID();\r\n      tasks.push(data);\r\n    } else {\r\n      var index = this.findIndex(data.id);\r\n      tasks[index] = data;\r\n    }\r\n    this.setState({\r\n      tasks: tasks,\r\n      taskEditing: null\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }\r\n\r\n  onUpdateStatus = (id) => {\r\n    var { tasks } = this.state;\r\n    var index = this.findIndex(id);\r\n    //console.log(index);\r\n    if (index !== -1) {\r\n      tasks[index].status = !tasks[index].status;\r\n      this.setState({\r\n        tasks: tasks,\r\n      });\r\n      localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n  }\r\n\r\n  findIndex = (id) => {\r\n    var { tasks } = this.state;\r\n    var result = -1;\r\n    tasks.forEach((task, index) => {\r\n      if (task.id === id) {\r\n        result = index;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  onDelete = (id) => {\r\n    var { tasks } = this.state;\r\n    var index = this.findIndex(id);\r\n    //console.log(index);\r\n    if (index !== -1) {\r\n      tasks.splice(index, 1);\r\n      this.setState({\r\n        tasks: tasks,\r\n      });\r\n      localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onUpdate = (id) => {\r\n    var { tasks } = this.state;\r\n    var index = this.findIndex(id);\r\n    var taskEditing = tasks[index];\r\n    this.setState({\r\n      taskEditing: taskEditing,\r\n    });\r\n    this.onShowForm();\r\n\r\n\r\n  }\r\n\r\n  onFilter =(filterName,filterStatus) =>{\r\n    filterStatus = parseInt(filterStatus,10);\r\n    this.setState({\r\n      filter:{\r\n        name: filterName.toLowerCase(),\r\n        status: filterStatus,\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearch = (keyword) =>{\r\n      this.setState({\r\n        keyword: keyword.toLowerCase(),\r\n      });\r\n  }\r\n\r\n  onSort = (sortBy,sortValue) =>{\r\n    this.setState({\r\n      sortBy: sortBy,\r\n      sortValue:  sortValue,\r\n    });\r\n  }\r\n  render() {\r\n    var { tasks, \r\n          isDisplayForm, \r\n          taskEditing, \r\n          filter, \r\n          keyword,\r\n          sortBy,\r\n          sortValue,\r\n        } = this.state;\r\n    if(filter){\r\n      if(filter.name){\r\n        tasks = tasks.filter((task)=>{\r\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\r\n        });\r\n      }\r\n      tasks = tasks.filter((task)=>{\r\n        if(filter.status === -1){\r\n          return task;\r\n        }\r\n        else{\r\n          return task.status === (filter.status === 1 ? true: false);\r\n        }\r\n      });\r\n    }\r\n    if(keyword){\r\n      tasks = tasks.filter((task)=>{\r\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\r\n      });\r\n    }\r\n\r\n    if(sortBy==='name'){\r\n      tasks.sort((a,b)=>{\r\n        if(a.name>b.name) return sortValue;\r\n        else if(a.name<b.name) return -sortValue;\r\n        else return 0;\r\n      })\r\n    }else{\r\n      tasks.sort((a,b)=>{\r\n        if(a.status>b.status) return -sortValue;\r\n        else if(a.status<b.status) return sortValue;\r\n        else return 0;\r\n      })\r\n    }\r\n    var elmTaskForm = isDisplayForm\r\n      ? <TaskForm\r\n        onSubmit={this.onSubmit}\r\n        onCloseForm={this.onCloseForm}\r\n        task={taskEditing}\r\n      />\r\n      : '';\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <h1>Quản Lý Công Việc</h1>\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\r\n            {elmTaskForm}\r\n          </div>\r\n\r\n          <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.onToggleForm}\r\n            >\r\n              <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\r\n            </button>\r\n\r\n            <Control \r\n              onSearch={this.onSearch}\r\n              onSort={this.onSort}\r\n              sortBy={sortBy}\r\n              sortValue={sortValue}\r\n            >\r\n            </Control>\r\n\r\n            <div className=\"row mt-15\">\r\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <TaskList\r\n                  tasks={tasks}\r\n                  onUpdateStatus={this.onUpdateStatus}\r\n                  onDelete={this.onDelete}\r\n                  onUpdate={this.onUpdate}\r\n                  onFilter={this.onFilter}\r\n                ></TaskList>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}